generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(dbgenerated("gen_random_uuid()"))
  name        String?
  username    String?   @unique
  email       String    @unique
  password    String?
  verifyToken String?
  authToken   String?
  avatar      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  comments    Comment[]
  posts       Post[]

  @@map("users")
}

model Post {
  id         String     @id @default(dbgenerated("gen_random_uuid()"))
  title      String
  content    String
  published  Boolean    @default(false)
  authorId   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
  viewCount  Int        @default(0)
  comments   Comment[]
  author     User       @relation(fields: [authorId], references: [id])
  categories Category[] @relation("PostCategories")
  tags       Tag[]      @relation("PostTags")

  @@map("posts")
}

model Comment {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  content   String
  authorId  String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@map("comments")
}

model Category {
  id    String @id @default(dbgenerated("gen_random_uuid()"))
  name  String @unique
  posts Post[] @relation("PostCategories")

  @@map("categories")
}

model Tag {
  id    String @id @default(dbgenerated("gen_random_uuid()"))
  name  String @unique
  posts Post[] @relation("PostTags")

  @@map("tags")
}
